const data = [
  { id: 1, title: "Project Travel", details: "The TravelSer website is a static travel service platform prototype designed to showcase a clean and user-friendly interface for travel booking needs. It consists of three main sections: a homepage that highlights travel destinations and provides navigation to flight, hotel, train, and bus services; a login page that allows users to enter their email and password; and a registration page where new users can create an account by providing their name, email, and password. Although it is static and does not yet include functional booking features, the design emphasizes modern visuals with destination backgrounds, intuitive navigation, and consistent branding to represent the concept of an integrated online travel booking system.", 
    path: "./assets/images/travelser.png",path2:"./assets/images/travelser2.png",path3:"./assets/images/travelser3.png", category:"Web Application, UI/UX Design", client:"BINUS Unitversity,HCI Subject", objective:"Build Travel Website",tools:"HTML, CSS, Figma", apiLastDate:"https://api.github.com/repos/Lasercl/ProjectTravel",demoLink:"",githubLink:"https://github.com/Lasercl/ProjectTravel",prototypeLink:"https://www.figma.com/proto/kWRIgjEKpFHuhYhd8jdqtT/HCI-LAB?node-id=105-42&starting-point-node-id=105%3A42"},
  { id: 2, title: "Recurfit", details: "The Fitness Website Prototype is a static platform designed to provide users with an engaging interface to explore gym-related content. It features a homepage with a calendar, real-time clock, motivational tagline, and daily workout recommendations in the form of images and videos demonstrating proper exercise techniques. Additional sections include a login and registration page (non-functional in this prototype) to simulate user authentication, a muscle anatomy page to visualize targeted workout areas, and a space for prototype chat as well as nutrition guidance through sample meal plans or recipes. As a static website, it does not store user data but focuses on delivering a clean, motivational, and visually structured concept for a future interactive fitness platform.",
    path: "./assets/images/recurfit.png",path2:"./assets/images/recurfit2.png",path3:"./assets/images/recurfit3.png",category:"Web Application",client:"BINUS Unitversity,HCI Subject", objective:"Build Fitnes Web Statis",tools:"HTML, CSS, Javascript", apiLastDate:"https://api.github.com/repos/Lasercl/Recurfit",demoLink:"https://lasercl.github.io/RecurFit/home2.html",githubLink:"https://github.com/Lasercl/RecurFit",prototypeLink:""},
  { id: 3, title: "Perfofit", details: "The Perfofit Website is a dynamic health and fitness platform built using the ASP.NET framework with C# and integrated with a database system to support user interaction and data storage. Unlike a static prototype, this version allows users to register and log in, with all account information securely stored in the database. The platform provides personalized features where users can add workout activities they want to perform and plan meals to support their fitness journey, with all inputs recorded into the database for persistence. With structured planning, trainer hiring options, and separate pathways for users to join as either a trainer or a member, the website delivers an interactive and personalized experience that reflects a real-world fitness management system.",
    path: "./assets/images/perfofit.png" , path2:"./assets/images/perfofit2.png",path3:"./assets/images/perfofit3.png",category:"Web Application, UI/UX design",client:"BINUS University,Software Engineering Subject", objective:"Build Fitness Website with Framework",tools:"C#, CSS, ASP.NET",apiLastDate:"https://api.github.com/repos/guitiorr/FitnessApp",demoLink:"",githubLink:"https://github.com/guitiorr/FitnessApp",prototypeLink:"https://www.figma.com/proto/JBHjOSZ7jR62iiMngnklzg/Prototype-Fitness-App-Coy?node-id=1-2&starting-point-node-id=1%3A2"},
  { id: 4, title: "Makeupzz Project", details: "The Makeupzz Website is a dynamic online makeup ordering system developed using the ASP.NET framework with C# and supported by a database for managing users, transactions, and reports. From the user side, customers can register, log in, place makeup orders, and view their transaction history with detailed order information. From the admin side, administrators have access to all usersâ€™ transaction histories and can generate transaction reports based on specific days or months to monitor sales performance. The system provides essential e-commerce functionality with clear separation between user and admin roles, integrating order management, profile data, and reporting into a centralized platform.", 
    path: "./assets/images/makeupzz2.png",path2:"./assets/images/makeupzz.png",path3:"./assets/images/makeupzz3.png", category:"Web Application",client:"BINUS University,Pattern Software Design Subject",objective:"Build Management Order Web With Framework",tools:"C#, CSS, ASP.NET",apiLastDate:"https://api.github.com/repos/Lasercl/Back-end-PROJECT",demoLink:"",githubLink:"https://github.com/Lasercl/Back-end-PROJECT",prototypeLink:""},
  { id: 5, title: "Portofolio", details: "The Portfolio Website is a static personal portfolio built with HTML, CSS, and JavaScript to showcase professional background, skills, and projects. The homepage introduces the developer with a short bio, character traits, and work experiences, followed by a dedicated section displaying projects where the project data is stored in a JavaScript file for dynamic rendering. In addition, the portfolio is enhanced with an integration to the GitHub API that automatically retrieves and displays the latest update date of each project, ensuring that the portfolio content remains accurate and up to date. The design features a modern gradient background with a clean layout, including a Contact Me section that links to social media platforms such as Instagram, LinkedIn, YouTube, WhatsApp, and GitHub, providing an accessible and visually appealing personal branding platform.",
    path: "./assets/images/porfolio.png", path2:"./assets/images/porfolio2.png",path3:"./assets/images/porfolio3.png",category:"Web Application", client:"-", objective:"Build Portfolio Website",tools:"HTML, CSS, Javascript",apiLastDate:"https://api.github.com/repos/Lasercl/html-portofolio",demoLink:"https://lasercl.github.io/html-portofolio/",githubLink:"https://github.com/Lasercl/html-portofolio",prototypeLink:""},
  { id: 6, title: "Android Java Dispenser Project", details: "The Dispenser Automation Android App is a mobile application developed using Android Studio with Java that integrates with Firebase services to manage user authentication, data synchronization, and usage history. The app allows users to sign up and log in via Firebase Authentication, ensuring secure access to their personalized accounts. The dispenser device is connected to the application through the Firebase Realtime Database, enabling real-time monitoring and control of liquid dispensing, including tank levels. Additionally, the system stores historical dispensing records in Firebase Storage, allowing users to review past activities. This project demonstrates the combination of IoT integration with mobile app development to create a practical solution for automated liquid dispensing.", 
    path: "./assets/images/dispenser.png", path2:"./assets/images/dispenser2.png",path3:"./assets/images/dispenser3.png",category:"Mobile Application", client:"-", objective:"Build Dispensing Automation Android Application with IOT",tools:"Java, Android Studio, XML",apiLastDate:"https://api.github.com/repos/Lasercl/Dispenser",demoLink:"",githubLink:"",prototypeLink:""},
  { id: 7, title: "Java FX Project", details: "The Library Management System is a desktop application developed with JavaFX that allows users to manage different types of resources, including books, artworks, and computer files. Each item can be stored with detailed information such as title, author, publication year, genre, and edition, providing a structured way to organize library collections. The application features a simple and intuitive interface, with categorized sections and tabular views for displaying stored data. For this version, the system does not yet integrate with an external database; instead, the data is temporarily handled directly within Java, making it suitable for basic usage and as a foundation for future enhancements with database support.",
    path: "./assets/images/javafx.png",path2:"./assets/images/javafx2.png", path3:"./assets/images/javafx3.png", category:"Desktop Application", client:"BINUS University,OOAD Subject", objective:"Build Library Desktop Application",tools:"JAVAFX",apiLastDate:"https://api.github.com/repos/Lasercl/OOAD-PROJECT-LEC",demoLink:"",githubLink:"https://github.com/Lasercl/OOAD-PROJECT-LEC",prototypeLink:"https://www.figma.com/proto/IfHIYd5YWj3yw0FCe0VkLk/library-management-javafx?node-id=45-140&starting-point-node-id=45%3A140"}


];